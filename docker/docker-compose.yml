version: '3'

services:
  # app:
  #   image: 'php:7.4-fpm'
  #   volumes:
  #     - ./src:/var/www/html
  #   working_dir: /var/www/html
  #   networks:
  #     - remind_network
  # web:
  #   image: 'nginx:latest'
  #   ports:
  #     - '8000:80'
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - app
  #   networks:
  #     - remind_network

  # web:
  #   image: 'php:8.1-fpm'
  #   container_name: laravel-container
  #   working_dir: /var/www/html
  #   volumes:
  #     - ./src:/var/www/html
  #   ports:
  #     - "8000:8000"
  #   command: 
  #     - /bin/sh
  #     - -c
  #     - |
  #       php artisan config:cache
  #       php artisan config:clear
  #       composer dump-autoload -o
  #       php artisan serve --host=0.0.0.0 --port=8000
  #   networks:
  #     - remind_network

  # db:
  #   image: mysql:5.7
  #   container_name: laravel_db
  #   ports:
  #     - "3306:3306"
  #   environment:
  #     MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  #     MYSQL_DATABASE: nabitu
  #   networks:
  #     - remind_network

  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    depends_on:
      - php
      - mysql
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - '../src:/var/www/html'
    networks:
      - remind_network

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - '../src:/var/www/html'
    networks:
      - remind_network

  mysql:
    image: mysql:8.0.27
    container_name: mysql
    ports:
      - 3306:3306
    # volumes:
    #   - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: nabitu
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    networks:
      - remind_network

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - '../src:/var/www/html'
    working_dir: /var/www/html
    networks:
      - remind_network

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - '../src:/var/www/html'
    working_dir: /var/www/html
    entrypoint: [ 'php', 'artisan' ]
    networks:
      - remind_network

  npm:
    image: node:current-alpine
    container_name: npm
    volumes:
      - '../src:/var/www/html'
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]
    networks:
      - remind_network

networks:
  remind_network:
    driver: bridge
